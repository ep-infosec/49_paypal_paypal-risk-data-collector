{"version":3,"sources":["webpack://riskDataCollector/webpack/universalModuleDefinition","webpack://riskDataCollector/webpack/bootstrap","webpack://riskDataCollector/./node_modules/cross-domain-utils/src/constants.js","webpack://riskDataCollector/./node_modules/cross-domain-utils/src/utils.js","webpack://riskDataCollector/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://riskDataCollector/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://riskDataCollector/./node_modules/belter/src/util.js","webpack://riskDataCollector/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://riskDataCollector/./node_modules/belter/src/dom.js","webpack://riskDataCollector/./src/data-collector/persist-risk-data.js","webpack://riskDataCollector/./src/data-collector/constants.js","webpack://riskDataCollector/./src/data-collector/data-collector.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","window","location","protocol","canReadFromWindow","err","getActualDomain","Error","PROTOCOL","parent","getParent","host","getDomain","domain","mockDomain","indexOf","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","desc","getOwnPropertyDescriptor","isActuallySameDomain","isSameDomain","mockclosed","top","iframeIndex","collection","item","length","safeIndexOf","frame","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","isWindow","obj","toString","Window","__cross_domain_utils_window_check__","objectIDs","CrossDomainSafeWeakMap","weakmap","keys","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","splice","isSafeToReadWrite","entry","writable","index","push","has","undefined","getOrSet","serializeArgs","args","JSON","stringify","Array","slice","subkey","val","chars","uid","replace","charAt","floor","str","btoa","encodeURIComponent","p1","String","fromCharCode","parseInt","Buffer","from","base64encode","Date","toISOString","toLowerCase","getObjectID","isLocalStorageEnabled","method","logic","cache","__inline_memoize_cache__","localStorage","setItem","result","getItem","removeItem","inlineMemoize","persistRiskData","riskDataCookies","cookies","collectRiskData","preP1PostTime","clientMetadataID","appSourceID","payload","checkSumString","fraudnetStart","now","p1Start","_addToChecksumString","string","correlationId","appId","localStorageRiskData","k","navigatorFields","navigator","language","browserLanguage","_setNavigatorFields","screenFields","screen","_setScreenFields","windowFields","_setWindowFields","referer","document","referrer","URL","rvr","activeXDefined","ActiveXObject","description","flashPlayerVersion","plugins","mimeTypes","enabledPlugin","test","e","GetVariable","split","flashVersion","major","minor","release","_setFlashVersion","tz","getTimezoneOffset","Intl","DateTimeFormat","resolvedOptions","timeZone","tzName","dst","time","pt1","pp1","toFixed","cd1","ph1","input","hashVal","charCodeAt","hash","sf","original","keyword","la","lb","outer","j","_indexOfString","userAgent","decodeURIComponent","callPhantom","_phantom","phantom","concat","emit","spawn","doAutomation","domAutomationController","outerWidth","outerHeight","$cdc_asdjflasutopfhvcZLmcfl_","cache_","getAttribute","join","tb","opr","addons","opera","InstallTrigger","orientation","documentMode","StyleMedia","chrome","fragmentDirective","clientInformation","__firefox__","__gCrWeb","__crWeb","FormControlElement","onwebkitmouseforcechanged","webkitNotifications","HTMLElement","standalone","Boolean","mediaDevices","statusbar","visible","indexedDB","deleteDatabase","Animation","webkit","messageHandlers","_setTrueBrowser","prototype"],"mappings":"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","file":"paypal-risk-data-collector.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"riskDataCollector\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"riskDataCollector\"] = factory();\n\telse\n\t\troot[\"riskDataCollector\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    let result = [ ...getAllChildFrames(top), top ];\n\n    // Win may be in shadow dom\n    if (result.indexOf(win) === -1) {\n        result = [ ...result, win, ...getAllChildFrames(win) ];\n    }\n\n    return result;\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        let parent = frame;\n\n        while (parent.parentNode && parent.parentNode !== parent) {\n            parent = parent.parentNode;\n        }\n\n        // $FlowFixMe\n        if (!parent.host || !doc.documentElement.contains(parent.host)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let name = this.name;\n                let entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let values = this.values;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        }));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    const chars = '0123456789abcdef';\n\n    const randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    const timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : $ReadOnlyArray<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\ntype MemoizeOptions = {|\n    name? : string,\n    time? : number,\n    thisNamespace? : boolean\n|};\n\nconst getDefaultMemoizeOptions = () : MemoizeOptions => {\n    // $FlowFixMe\n    return {};\n};\n\nconst memoizedFunctions = [];\n\nexport function memoize<F : Function>(method : F, options? : MemoizeOptions = getDefaultMemoizeOptions()) : F & {| reset : () => void |} {\n    const cacheMap = new WeakMap();\n\n    const memoizedFunction = function memoizedFunction(...args) : mixed {\n        const cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        const key : string = serializeArgs(args);\n\n        const cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        const time  = Date.now();\n        const value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    };\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    memoizedFunctions.push(memoizedFunction);\n\n    // $FlowFixMe\n    const result : F = memoizedFunction;\n\n    return setFunctionName(result, `${ options.name || getFunctionName(method) }::memoized`);\n}\n\nmemoize.clear = () => {\n    for (const memoizedFunction of memoizedFunctions) {\n        memoizedFunction.reset();\n    }\n};\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : $ReadOnlyArray<any>) : ZalgoPromise<R> {\n        const key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\ntype PromisifyOptions = {|\n    name ? : string\n|};\n\nconst getDefaultPromisifyOptions = () : PromisifyOptions => {\n    // $FlowFixMe\n    return {};\n};\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : $ReadOnlyArray<any>) => R, options : PromisifyOptions = getDefaultPromisifyOptions()) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : $ReadOnlyArray<any>) => R, logic : (...args : $ReadOnlyArray<any>) => R, args : $ReadOnlyArray<any> = []) : R {\n    // $FlowFixMe\n    const cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    const key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    const result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    const regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            const stack = err && err.stack;\n            const message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) {\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    const defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    const index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    const original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    // eslint-disable-next-line compat/compat\n    if (Object.assign) {\n        // eslint-disable-next-line compat/compat\n        return Object.assign(obj, source);\n    }\n\n    for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : $ReadOnlyArray<T> {\n    const result = [];\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : $ReadOnlyArray<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : $ReadOnlyArray<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : $ReadOnlyArray<T> {\n    const results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    const result = {};\n\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : $ReadOnlyArray<string> {\n    const result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        const localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : {| cancel : () => void |} {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    const result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, -2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        const parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            const part = parts[i];\n            const isLast = (i + 1 === parts.length);\n            const isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {|\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n|};\n\nexport function eventEmitter() : EventEmitterType {\n    const triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            const handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            const listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            const handlerList = handlers[eventName];\n            const promises = [];\n\n            if (handlerList) {\n                for (const handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    const pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    const interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | $ReadOnlyArray<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            const value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    const constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    const prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : $ReadOnlyArray<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        const length = item.length;\n        const result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                const el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        const result = {};\n\n        for (const key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                const el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        const descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {|\n    text : string,\n    groups : $ReadOnlyArray<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n|};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    const result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    const index : number = result.index;\n    const regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : $ReadOnlyArray<RegexResultType> {\n\n    const matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : $ReadOnlyArray<mixed>) => T, time : number = 100) : (...args : $ReadOnlyArray<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : $ReadOnlyArray<any>) => R) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            }));\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.shift();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\n// eslint-disable-next-line flowtype/no-mutable-array\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n\nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            const interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        const params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : {| query? : { [string] : string }, hash? : { [string] : string } |}) : string {\n\n    const query = options.query || {};\n    const hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    const queryString = extendQuery(originalQuery, query);\n    const hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    const meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function getPerformance() : ?Performance {\n    return inlineMemoize(getPerformance, () : ?Performance => {\n        // eslint-disable-next-line compat/compat\n        const performance = window.performance;\n\n        if (\n            performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        ) {\n            return performance;\n        }\n    });\n}\n\nexport function enablePerformance() : boolean {\n    return Boolean(getPerformance());\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n        const performance = getPerformance();\n\n        if (!performance) {\n            return;\n        }\n        \n        const timing = performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : $ReadOnlyArray<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER || event.keyCode === KEY_CODES.SPACE) { // eslint-disable-line unicorn/prefer-event-key\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : {| host? : string, path : string |}) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        const url = `${ host }${ path }`;\n        const scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (const script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            const src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                const value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                const result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : $ReadOnlyArray<{| country? : string, lang : string |}> {\n    const nav = window.navigator;\n\n    const locales = nav.languages\n        ? [ ...nav.languages ]\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            const [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    const element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        const interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    const { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    if (width && height) {\n        // $FlowFixMe\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    const name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    const params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        const err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    const tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    const documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {|\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n|};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        const promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    const promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nconst getDefaultCreateElementOptions = () : ElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = getDefaultCreateElementOptions(), container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    const element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (const key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {|\n    style? : {| [ string ] : string |},\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : {| [ string ] : string |},\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n|};\n\nconst getDefaultIframeOptions = () : IframeElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function iframe(options : IframeElementOptionsType = getDefaultIframeOptions(), container : ?HTMLElement) : HTMLIFrameElement {\n\n    const attributes = options.attributes || {};\n    const style = options.style || {};\n\n    const frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n\n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        const el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : $ReadOnlyArray<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (const eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (const eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    const capitalizedName = capitalizeFirstLetter(name);\n\n    for (const prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        // eslint-disable-next-line prefer-const\n        let startTimeout;\n        let endTimeout;\n        // eslint-disable-next-line prefer-const\n        let startEvent;\n        // eslint-disable-next-line prefer-const\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', 'hidden', 'important');\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', 'none', 'important');\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    const animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of querySelectorAll('script', el)) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({| width : number, height : number |}) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {| cancel : () => void |} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    const check = () => {\n        const newWidth = el.offsetWidth;\n        const newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        const loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n    const performance = getPerformance();\n\n    if (!performance) {\n        return;\n    }\n\n    if (typeof performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n\nexport function isShadowElement(element : Node) : boolean {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    return element.toString() === '[object ShadowRoot]';\n}\n\nexport function getShadowRoot(element : Node) : ?Node {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    if (isShadowElement(element)) {\n        return element;\n    }\n}\n\nexport function getShadowHost(element : Node) : ?HTMLElement {\n    const shadowRoot = getShadowRoot(element);\n\n    // $FlowFixMe\n    if (shadowRoot.host) {\n        // $FlowFixMe\n        return shadowRoot.host;\n    }\n}\n\nexport function insertShadowSlot(element : HTMLElement) : HTMLElement {\n    const shadowHost = getShadowHost(element);\n\n    if (!shadowHost) {\n        throw new Error(`Element is not in shadow dom`);\n    }\n\n    if (isShadowElement(shadowHost)) {\n        throw new Error(`Host element is also in shadow dom`);\n    }\n\n    const slotName = `shadow-slot-${ uniqueID() }`;\n\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n    element.appendChild(slot);\n    \n    const slotProvider = document.createElement('div');\n    slotProvider.setAttribute('slot', slotName);\n    shadowHost.appendChild(slotProvider);\n\n    return slotProvider;\n}\n","/* @flow */\n\n/**\n*\n* Persist risk data: save the cookies returned from backend in localstorage\n*\n*/\n\nimport { isLocalStorageEnabled } from 'belter/src';\n\nimport { constants } from './constants';\n\ntype PersistRiskData = {|\n    cookies? : string\n|};\n\nexport function persistRiskData(riskDataCookies : PersistRiskData) {\n    if (isLocalStorageEnabled() && riskDataCookies && riskDataCookies.cookies) {\n        window.localStorage.setItem(constants.localStorageRiskData, riskDataCookies.cookies);\n    }\n}\n","/**\n * constants.js\n *\n * Shared constants.\n *\n */\n/* exported constants */\nexport const constants = {\n    FN_RELEASE_VERSION:   '1.0.0',\n    localStorageRiskData: '__paypal_risk_data__'\n};\n","/* @flow */\n/* constants:true*/\n\nimport { isLocalStorageEnabled } from 'belter/src';\n\nimport { constants } from './constants';\n\ntype CollectRiskDataOptions = {|\n    clientMetadataID : string,\n    appSourceID : string\n|};\n\n/**\n*\n* Collects P1 risk data: navigator, window, & screen fields, referrer URL, activeXDefined,\n* fraudnet-version, flash version, timezone details, checksum, spoof-flag,\n* true-browser\n*/\nexport function collectRiskData({ clientMetadataID, appSourceID } : CollectRiskDataOptions) : Object {\n    const payload = {};\n    let checkSumString = '';\n    const fraudnetStart = Date.now();\n    const p1Start = Date.now();\n\n    const hash = function(input) {\n        let hashVal = 0;\n        let char;\n        for (let i = 0; i < input.length; i++) {\n            char = input.charCodeAt(i);\n            hashVal += char;\n        }\n        // Convert to 32bit integer\n        hashVal &= hashVal; // eslint-disable-line no-bitwise\n        return hashVal;\n    };\n\n    /**\n    * Concatenates an element to the checksum string.\n    */\n    const _addToChecksumString = function(string : string) {\n        checkSumString += string;\n    };\n\n    /**\n    * Sets superCookie and VIDCookie values onto the payload.\n    */\n    const _setCookiesDataOnPayload = function() {\n        // default values null - if no supercookies are found\n        if (isLocalStorageEnabled() && window.localStorage.getItem(constants.localStorageRiskData)) {\n            payload.localStorageRiskData = window.localStorage.getItem(constants.localStorageRiskData);\n        }\n    };\n\n    /**\n    * Sets fields from the browser's Navigator API.\n    */\n    const _setNavigatorFields = function() {\n        let k;\n        const navigatorFields = [\n            'appName',\n            'appVersion',\n            'buildID',\n            'cookieEnabled',\n            'language',\n            'onLine',\n            'oscpu',\n            'platform',\n            'product',\n            'productSub',\n            'userAgent',\n            'vendor',\n            'vendorSub'\n        ];\n        payload.navigator = {};\n        for (k = 0; k < navigatorFields.length; k += 1) {\n            payload.navigator[navigatorFields[k]] = window.navigator[navigatorFields[k]];\n            // Fields for checksum\n            if (navigatorFields[k] === 'userAgent') {\n                _addToChecksumString(window.navigator[navigatorFields[k]]);\n            }\n        }\n        // For IE 10 and below, window.navigator.language is not supported. Using window.navigator.browserLanguage to get 'language'\n        if (typeof window.navigator.language === 'undefined') {\n            payload.navigator.language = window.navigator.browserLanguage;\n        }\n    };\n    /**\n    * Sets fields from the browser's Screen API.\n    */\n    const _setScreenFields = function() {\n        let k;\n        const screenFields = [\n            'colorDepth',\n            'pixelDepth',\n            'height',\n            'width',\n            'availHeight',\n            'availWidth'\n        ];\n        payload.screen = {};\n        for (k = 0; k < screenFields.length; k += 1) {\n            payload.screen[screenFields[k]] = window.screen[screenFields[k]];\n            if (\n                screenFields[k] === 'colorDepth' || screenFields[k] === 'width'\n            ) {\n                _addToChecksumString(window.screen[screenFields[k]]);\n            }\n        }\n    };\n\n    /**\n    * Sets fields from the browser's Window API.\n    */\n    const _setWindowFields = function() {\n        let k;\n        const windowFields = [\n            'outerHeight',\n            'outerWidth',\n            'innerHeight',\n            'innerWidth',\n            'devicePixelRatio'\n        ];\n        payload.window = {};\n        for (k = 0; k < windowFields.length; k += 1) {\n            payload.window[windowFields[k]] = window[windowFields[k]];\n        }\n    };\n\n    /**\n    * Sets the referrer URL.\n    * Note the intentional spelling difference between \"referrer\" and \"referer\"\n    * In FraudNet, we use \"referer\"\n    */\n    const _setReferrerURL = function() {\n        payload.referer = document.referrer;\n        payload.URL = document.URL;\n    };\n    /**\n    * Sets the FraudNet version number.\n    * Typically corresponds to a date in YYYYMMDD format.\n    */\n    const _setFraudNetVersionNumber = function() {\n        payload.rvr = constants.FN_RELEASE_VERSION;\n    };\n    /**\n        * Checks if the ActiveXObject is defined (only available on IE)\n        */\n    const _setActiveXDefined = function() {\n        payload.activeXDefined = typeof window.ActiveXObject !== 'undefined';\n    };\n\n    /**\n    * Sets the Flash-Player version, if it is available.\n    */\n    const _setFlashVersion = function() {\n        const fpMap = {\n            UNDEFINED:          'undefined',\n            SHOCKWAVE_FLASH:    'Shockwave Flash',\n            SHOCKWAVE_FLASH_AX: 'ShockwaveFlash.ShockwaveFlash',\n            FLASH_MIME_TYPE:    'application/x-shockwave-flash'\n        };\n        const flashPlayerVersion = [ 0, 0, 0 ];\n        let description;\n\n        if (\n            typeof navigator.plugins !== fpMap.UNDEFINED && typeof navigator.plugins[fpMap.SHOCKWAVE_FLASH] === 'object'\n        ) {\n            try {\n                description = navigator.plugins[fpMap.SHOCKWAVE_FLASH].description;\n                // navigator.mimeTypes[\"application/x-shockwave-flash\"].enabledPlugin indicates whether plug-ins are enabled or disabled in Safari 3+\n                if (description && !(typeof navigator.mimeTypes !== fpMap.UNDEFINED &&\n                    navigator.mimeTypes[fpMap.FLASH_MIME_TYPE] &&\n                    !navigator.mimeTypes[fpMap.FLASH_MIME_TYPE].enabledPlugin)\n                ) {\n                    description = description.replace(\n                        /^[\\w\\W]*\\s+(\\S+\\s+\\S+$)/,\n                        '$1'\n                    );\n                    flashPlayerVersion[0] = parseInt(\n                        description.replace(/^([\\w\\W]*)\\.[\\w\\W]*$/, '$1'),\n                        10\n                    );\n                    flashPlayerVersion[1] = parseInt(\n                        description.replace(\n                            /^[\\w\\W]*\\.([\\w\\W]*)\\s[\\w\\W]*$/,\n                            '$1'\n                        ),\n                        10\n                    );\n                    flashPlayerVersion[2] = (/[a-zA-Z]/).test(description)\n                        ? parseInt(\n                            description.replace(\n                                /^[\\w\\W]*[a-zA-Z]+([\\w\\W]*)$/,\n                                '$1'\n                            ),\n                            10\n                        )\n                        : 0;\n                }\n            } catch (e) {\n                // empty\n            }\n        } else if (typeof window.ActiveXObject !== fpMap.UNDEFINED) {\n            try {\n                const ActiveXObject = new window.ActiveXObject(\n                    fpMap.SHOCKWAVE_FLASH_AX\n                );\n                if (ActiveXObject) {\n                    description = ActiveXObject.GetVariable('$version');\n                    if (description) {\n                        description = description.split(' ')[1].split(',');\n                        flashPlayerVersion[0] = parseInt(description[0], 10);\n                        flashPlayerVersion[1] = parseInt(description[1], 10);\n                        flashPlayerVersion[2] = parseInt(description[2], 10);\n                    }\n                }\n            } catch (e) {\n                // empty\n            }\n        }\n\n        // place flashVersion into payload\n        payload.flashVersion = {\n            major:   flashPlayerVersion[0],\n            minor:   flashPlayerVersion[1],\n            release: flashPlayerVersion[2]\n        };\n    };\n\n\n    /**\n    * Sets the timezone details.\n    * tz - getTimezoneOffset in the Date API (in milliseconds)\n    * tzName - jsTimezoneDetect 3rd party library\n    * dst - Boolean for daylight's savings. Moving to back-end.\n    */\n    const _setTimezoneDetails = function() {\n        // getTimezoneOffset returns a value in minutes\n        // changing to milliseconds before returning for comparisons\n        // inverting positive and negative, see\n        // https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getTimezoneOffset\n        payload.tz = -(new Date().getTimezoneOffset() * 60000);\n        if (Intl.DateTimeFormat() && Intl.DateTimeFormat().resolvedOptions() && Intl.DateTimeFormat().resolvedOptions().timeZone) {\n            payload.tzName =  Intl.DateTimeFormat().resolvedOptions().timeZone;\n        }\n        if (payload.tzName) {\n            _addToChecksumString(payload.tzName);\n        }\n        payload.dst = true;\n    };\n\n    /**\n    * Sets the P1 timing details.\n    * time - Date.now()\n    * i - iframe loading time\n    * pp1 - \"pre-post1\", the time from app-start to finish collecting P1.\n    * cd1 - time to collect p1 data.\n    */\n    const _setP1TimingDetails = function() {\n        const preP1PostTime = Date.now();\n        _addToChecksumString(preP1PostTime.toString());\n        payload.time = preP1PostTime;\n\n        payload.pt1 = {\n            pp1: (preP1PostTime - fraudnetStart).toFixed(2),\n            cd1: (preP1PostTime - p1Start).toFixed(2)\n        };\n    };\n\n    /*\n    * Sets a four-digit spoof flag.\n    * Checks user agent, global properties, outer width/height, selenium.\n    * 0 is false; 1 is true. 0000 means all methods return false. cannot find any suspect script detection.\n    * the last digit (selenium check) works for firefox only from the front end code, we will merge the result\n    * at backend for other browsers.\n    */\n    const _generateSpoofFlag = function() {\n        let result = [ 0, 0, 0, 0 ];\n        const propEnum = {\n            NO:        0,\n            YES:       1,\n            PHANTOMJS: 2,\n            NODEJS:    3,\n            COUCHJS:   4,\n            RHINO:     5,\n            CHROMIUM:  6\n        };\n        // 1st digit - userAgentCheck\n        (function userAgentCheck() {\n            // convenience function\n            const _indexOfString = function(original, keyword) {\n                const la = original.length;\n                const lb = keyword.length;\n                outer: for (let i = 0; i <= la - lb; i++) {\n                    for (let j = 0; j < lb; j++) {\n                        if (keyword.charAt(j) !== original.charAt(i + j)) {\n                            continue outer;\n                        }\n                    }\n                    return i;\n                }\n                return -1;\n            };\n            // search if there is a phantomjs in the UA.\n            try {\n                if (\n                    _indexOfString(\n                        window.navigator.userAgent.toLowerCase(),\n                        decodeURIComponent('%70%68%61%6E%74%6F%6D%6A%73')\n                    ) > -1\n                ) {\n                    result[0] = propEnum.YES;\n                    return;\n                }\n                result[0] = propEnum.NO;\n            } catch (e) {\n                result[0] = propEnum.NO;\n            }\n        }());\n        // 2nd digit - globalPropertiesCheck\n        (function globalPropertiesCheck() {\n            // some headless specific properties\n            try {\n                if (window.callPhantom || window._phantom || window.phantom) {\n                    result = result.concat(propEnum.PHANTOMJS);\n                    result[1] = propEnum.PHANTOMJS;\n                    return;\n                }\n                if (window.Buffer) {\n                    result[1] = propEnum.NODEJS;\n                    return;\n                }\n                if (window.emit) {\n                    result[1] = propEnum.COUCHJS;\n                    return;\n                }\n                if (window.spawn) {\n                    result[1] = propEnum.RHINO;\n                    return;\n                }\n                if (window.doAutomation || window.domAutomationController) {\n                    result[1] = propEnum.CHROMIUM;\n                    return;\n                }\n                result[1] = propEnum.NO;\n            } catch (e) {\n                result[1] = propEnum.NO;\n            }\n        }());\n        // 3rd digit - sizeCheck\n        (function sizeCheck() {\n            try {\n                if (window.outerWidth === 0 && window.outerHeight === 0) {\n                    result[2] = propEnum.YES;\n                    return;\n                }\n                result[2] = propEnum.NO;\n            } catch (e) {\n                result[2] = propEnum.NO;\n            }\n        }());\n        // 4th digit - seleniumCheck\n        (function seleniumCheck() {\n            try {\n                if (window.document.$cdc_asdjflasutopfhvcZLmcfl_.cache_) {\n                    // chrome selenium properties. we have more enhanced logic at backend to\n                    // identify chrome selenium.\n                    result[3] = propEnum.YES;\n                    return;\n                }\n            } catch (e) {\n                // empty\n            }\n            try {\n                if (\n                    window.document.documentElement.getAttribute(\n                        decodeURIComponent('%77%65%62%64%72%69%76%65%72')\n                    )\n                ) {\n                    // firefox\n                    // decoded string = webdriver\n                    result[3] = propEnum.YES;\n                    return;\n                }\n            } catch (e) {\n                // empty\n            }\n            try {\n                if (\n                    decodeURIComponent(\n                        '%5F%53%65%6C%65%6E%69%75%6D%5F%49%44%45%5F%52%65%63%6F%72%64%65%72'\n                    ) in window\n                ) {\n                    // a firefox plugin\n                    // decoded string \"_Selenium_IDE_Recorder\"\n                    result[3] = propEnum.YES;\n                    return;\n                }\n            } catch (e) {\n                // empty\n            }\n            try {\n                if (\n                    decodeURIComponent(\n                        '%5F%5F%77%65%62%64%72%69%76%65%72%5F%73%63%72%69%70%74%5F%66%6E'\n                    ) in document\n                ) {\n                    // IE\n                    // decoded string \"__webdriver_script_fn\"\n                    result[3] = propEnum.YES;\n                    return;\n                }\n            } catch (e) {\n                // empty\n            }\n            result[3] = propEnum.NO;\n        }());\n\n        return result.join('');\n    };\n\n    /**\n    * Sets the trueBrowser property.\n    */\n    const _setTrueBrowser = function() {\n        /* var browserEnum = { UNDEFINED : -1, CHROME : 1, OPERA : 2, FIREFOX : 3,SAFARI : 4, IE : 5, EDGE : 6,\n            MOBILE_CHROME : 7, MOBILE_SAFARI : 8, SAFARI_WEBVIEW : 9, MOBILE_FIREFOX : 10, EDEGE_CHROMIUM : 11 };\n        */\n        try {\n            if ((window.opr && window.opr.addons) || window.opera) {\n                return 2;\n            }\n            // $FlowFixMe\n            if (typeof InstallTrigger !== 'undefined') {\n                if (typeof window.orientation !== 'undefined') {\n                    return 10;\n                } else {\n                    return 3;\n                }\n            }\n            if (\n                /* @cc_on!@*/ false ||\n                typeof document.documentMode !== 'undefined'\n            ) {\n                return 5;\n            }\n            if (typeof window.StyleMedia !== 'undefined') {\n                return 6;\n            }\n\n            const isChrome = window.chrome;\n            if (isChrome) {\n                if (!window.location.fragmentDirective &&\n                window.clientInformation.plugins &&\n                window.clientInformation.plugins.length > 0 &&\n                window.clientInformation.plugins[0].name.indexOf('Edge') >= 0) {\n                    return 11;\n                } else if (window.location.fragmentDirective &&\n                window.clientInformation.plugins &&\n                window.clientInformation.plugins.length > 0 &&\n                window.clientInformation.plugins[0].name.indexOf('Chrome') >= 0) {\n                    return 1;\n                }\n                const isMobile = typeof window.orientation !== 'undefined';\n                if (isMobile) {\n                    return 7;\n                }\n            }\n            if (typeof window.__firefox__ !== 'undefined') {\n                return 10;\n            }\n            if (\n                typeof window.__gCrWeb !== 'undefined' || typeof window.__crWeb !== 'undefined' ||\n                typeof window.FormControlElement !== 'undefined'\n            ) {\n                return 7;\n            }\n            const isSafari = (typeof document !== 'undefined' &&\n                    // $FlowFixMe\n                    typeof document.onwebkitmouseforcechanged !== 'undefined') ||\n                    typeof window.webkitNotifications !== 'undefined' ||\n                    Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0;\n            if (isSafari) {\n                // $FlowFixMe\n                const isMobileS = typeof navigator.standalone !== 'undefined' &&\n                    typeof window.orientation !== 'undefined';\n                if (!isMobileS) {\n                    return 4;\n                } else {\n                    if (Boolean(navigator.mediaDevices) || (window.statusbar && window.statusbar.visible) ||\n                        (window.indexedDB && typeof window.indexedDB.deleteDatabase !== 'undefined' &&\n                        typeof window.Animation !== 'undefined')\n                    ) {\n                        if (window.webkit &&\n                            typeof window.webkit.messageHandlers !== 'undefined') {\n                            return 9;\n                        } else {\n                            return 8;\n                        }\n                    } else {\n                        return 9;\n                    }\n                }\n            }\n            return -1;\n        } catch (e) {\n            return -1;\n        }\n    };\n\n    /**\n    * Converts the checksumString to a 32-bit integer, to 2 decimal places.\n    *\n    * Currently a combination of:\n    * 1. userAgent,\n    * 2. screen's colorDepth & width,\n    * 3. timezone name,\n    * 4. and epoch timestamp.\n    */\n    const _generateChecksum = function() {\n        return hash(checkSumString).toFixed(2);\n    };\n\n    const collectP1 = function() {\n        _setCookiesDataOnPayload();\n        _setNavigatorFields();\n        _setScreenFields();\n        _setWindowFields();\n        _setReferrerURL();\n        _setFraudNetVersionNumber();\n        _setActiveXDefined();\n        _setFlashVersion();\n        _setTimezoneDetails();\n        _setP1TimingDetails();\n\n        (function _setPt1MiscFields() {\n            // $FlowFixMe\n            payload.pt1.ph1 = _generateChecksum();\n            // $FlowFixMe\n            payload.pt1.sf = _generateSpoofFlag();\n            // $FlowFixMe\n            payload.pt1.tb = _setTrueBrowser();\n        }());\n        return payload;\n    };\n\n    const p1Payload = collectP1();\n\n    return {\n        correlationId: clientMetadataID,\n        appId:         appSourceID,\n        payload:       p1Payload\n    };\n}\n"],"sourceRoot":""}